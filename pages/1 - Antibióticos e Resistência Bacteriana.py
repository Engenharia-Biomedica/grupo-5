import pandas as pd
import streamlit as st

# Configura√ß√£o da p√°gina Streamlit
st.set_page_config(page_title = 'Antibi√≥ticos e Resist√™ncia Bacteriana', page_icon = 'ü¶†', initial_sidebar_state = 'collapsed')

# Cabe√ßalho da aplica√ß√£o
st.header('Painel de Monitoramento Microbiol√≥gico')

# Carregamento dos dados a partir de um arquivo CSV
dados = pd.read_csv("sample_data_clean.csv", sep = ",")

# Subcabe√ßalho
st.subheader('Antibi√≥ticos e Resist√™ncia Bacteriana', divider = 'rainbow')

# Verifica se o DataFrame est√° vazio
if dados.empty:

    st.error('Erro ao carregar dados. Certifique-se de que o banco de dados est√° correto e cont√©m dados v√°lidos.')

else:

    # Filtro para o tipo de bact√©ria
    ds_micro_organismo = st.selectbox('Selecione o tipo de bact√©ria:', ['Todos'] + list(dados['ds_micro_organismo'].unique()))

    # Filtro para o tipo de antibi√≥tico associado ao microorganismo
    ds_antibiotico_microorganismo = st.selectbox('Selecione o tipo de antibi√≥tico:', ['Todos'] + list(dados['ds_antibiotico_microorganismo'].unique()))

    # L√≥gica de filtro de dados
    dados_filt = dados[((ds_micro_organismo == 'Todos') | (dados['ds_micro_organismo'] == ds_micro_organismo)) &
                       ((ds_antibiotico_microorganismo == 'Todos') | (dados['ds_antibiotico_microorganismo'] == ds_antibiotico_microorganismo))]

    # Verifica se o DataFrame filtrado est√° vazio
    if dados_filt.empty:

        st.warning('Nenhum dado correspondente aos filtros selecionados.')

    else:

        # C√°lculo da frequ√™ncia para f√°rmacos utilizados
        contagem_frequencia = dados_filt['ds_antibiotico_microorganismo'].value_counts().reset_index()
        contagem_frequencia.columns = ['F√°rmacos Utilizados', 'Frequ√™ncia de uso']

        # Exibi√ß√£o dos dados em uma tabela
        st.subheader('Frequ√™ncia dos F√°rmacos Utilizados:')
        st.dataframe(contagem_frequencia)

        # Exibi√ß√£o dos dados em um gr√°fico de barras
        st.subheader('Gr√°fico de Barras para os F√°rmacos Utilizados:')
        st.bar_chart(contagem_frequencia.set_index('F√°rmacos Utilizados'))

        # C√°lculo da frequ√™ncia para tipo de resist√™ncia
        contagem_frequencia_resistencia = dados_filt['cd_interpretacao_antibiograma'].value_counts().reset_index()
        contagem_frequencia_resistencia.columns = ['Tipo de Resist√™ncia', 'Frequ√™ncia']

        # Exibi√ß√£o dos dados em uma tabela
        st.subheader('Frequ√™ncia dos Tipos de Resist√™ncia:')
        st.dataframe(contagem_frequencia_resistencia)

        # Exibi√ß√£o dos dados em um gr√°fico de barras
        st.subheader('Gr√°fico de Barras para os Tipos de Resist√™ncia:')
        st.bar_chart(contagem_frequencia_resistencia.set_index('Tipo de Resist√™ncia'))